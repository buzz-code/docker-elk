version: '3.3'

services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    # ports:
    #   - "9200:9200"
    #   - "9300:9300"
    configs:
      - source: elastic_config2
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data:Z
    env_file:
      - .env
    environment:
      # ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
      # Force publishing on the 'elk' overlay.
      network.publish_host: _eth0_
    networks:
      - elk
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
            - node.labels.elk == true
      resources:
        limits:
          cpus: '0.5'
          # memory: 500M

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:7.17.0
  #   # ports:
  #   #   - "5044:5044"
  #   #   - "5000:5000"
  #   #   - "9600:9600"
  #   configs:
  #     - source: logstash_config3
  #       target: /usr/share/logstash/config/logstash.yml
  #     - source: logstash_pipeline3
  #       target: /usr/share/logstash/pipeline/logstash.conf
  #   env_file:
  #     - .env
  #   environment:
  #     LS_JAVA_OPTS: "-Xmx256m -Xms256m"
  #   networks:
  #     - elk
  #   deploy:
  #     mode: replicated
  #     replicas: 1
  #     placement:
  #       constraints:
  #           - node.labels.elk == true
  #     resources:
  #       limits:
  #         cpus: '0.3'
  #         memory: 500M

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    # ports:
    #   - "5601:5601"
    configs:
      - source: kibana_config7
        target: /usr/share/kibana/config/kibana.yml
    env_file:
      - .env
    networks:
      - elk
      - caddy
    deploy:
      mode: replicated
      replicas: 1
      labels:
        caddy: kibana.yoman.online
        caddy.reverse_proxy: '{{upstreams 5601}}'
      placement:
        constraints:
            - node.labels.elk == true
      # resources:
      #   limits:
      #     cpus: '0.3'
      #     memory: 500M

configs:
  elastic_config2:
    file: ./elasticsearch/config/elasticsearch.yml
  logstash_config3:
    file: ./logstash/config/logstash.yml
  logstash_pipeline3:
    file: ./logstash/pipeline/logstash.conf
  kibana_config7:
    file: ./kibana/config/kibana.yml

volumes:
  elasticsearch:

networks:
  elk:
    driver: overlay
  caddy:
    external: true
